@inject NavigationManager nav;
@inject HttpClient http;
@inject ProtectedLocalStorage storage;
@inject ClientAuthController authController;
@inject IConfiguration _config;

@page "/login"
<PageTitle>Home</PageTitle>

<div id="register" class="flex flex-col gap-4 min-h-screen justify-center items-center login font-oswald p-2">
  <h1 class="font-oswald uppercase text-4xl text-neutral-100 font-semibold uppercase">Login</h1>
  <EditForm Model="@user" OnValidSubmit="@RequestLogin" class="w-full flex flex-col gap-5 max-w-lg bg-opacity-30 rounded shadow-lg px-5">
    <DataAnnotationsValidator />
      <div class="flex flex-wrap -mx-3">
          <div class="flex flex-col gap-2 w-full px-3">
            <label class="flex gap-3 uppercase tracking-wide text-neutral-100 text-xs font-bold" for="grid-first-name">
              Email
              <ValidationMessage class="text-red-800" For="@(()=> user.Email)" />
            </label>
            <InputText @bind-Value="user.Email" for="Email"
              class="appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-2 px-4 leading-tight focus:outline-none focus:bg-white"
              id="grid-first-name" type="text" placeholder="example@email.com" />
          </div>
      </div>
      <div class="flex flex-wrap -mx-3">
        <div class="flex flex-col gap-2 w-full px-3">
          <label class="flex gap-3 uppercase tracking-wide text-neutral-100 text-xs font-bold" for="grid-first-name">
            Password
            <ValidationMessage class="text-red-800" For="@(()=> user.Password)" />
          </label>
          <InputText @bind-Value="user.Password" for="Password"
            class="appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-2 px-4 leading-tight focus:outline-none focus:bg-white"
            id="grid-first-name" type="password" placeholder="********" />
        </div>
      </div>
    <button type="submit"
      class="bg-indigo-700 hover:bg-indigo-500 text-neutral-100 font-bold py-2 px-4 rounded w-full shadow-lg">Submit</button>
  </EditForm>
  <p class="text-neutral-100 text-sm my-3">Wanted to Sign Up instead? <a class="underline italic" href="/register">Go here.</a></p>
</div>
@code {
  #pragma warning disable CS8604
  LoginUser user = new();
  private async Task RequestLogin()
  {
    UserWithToken signedInUser = await authController.ApiLogin(user);
    if (signedInUser != null)
    {
      await storage.SetAsync(_config["JWTSettings:SecretKey"], "AccessToken", signedInUser.AccessToken);
      await storage.SetAsync(_config["JWTSettings:SecretKey"],"RefreshToken", signedInUser.RefreshToken);
      await storage.SetAsync(_config["JWTSettings:SecretKey"], "UserId", signedInUser.UserId);
      nav.NavigateTo("/dashboard");
    }
  }
}